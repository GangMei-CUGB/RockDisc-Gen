import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import norm
import seaborn as sns
plt.rcParams['font.family'] = ['Times New Roman','Simsun']  
plt.rcParams['font.size'] =10
plt.rcParams['mathtext.fontset'] ='stix'

# 设置图形风格
plt.style.use('seaborn-v0_8-whitegrid')
df1 = pd.read_csv('Oernlia_set1.csv')
df2 = pd.read_csv('G_prediction.csv')

fig,ax = plt.subplots(figsize=(10,6))
ax1 = ax.twinx()
num,ticks = np.histogram(df1.iloc[:,0],bins = np.arange(0,70,5))
wids = 2.5
ax.bar(ticks[:-1]+0.5*wids,num,wids,ec='#1b9e77',fc='#1b9e77',zorder=10,label='Observed')

mean = np.mean(df1.iloc[:,0])  # 均值
std = np.std(df1.iloc[:,0])    # 标准差

x = np.linspace(mean - 4*std, mean + 4*std, 1000)
y = norm.pdf(x, mean, std)  # PDF (概率密度函数) 值
ax1.plot(x, y,color='#1b9e77')



num,ticks = np.histogram(df2.iloc[:,0],bins = np.arange(0,70,5))
wids = 2.5
ax.bar(ticks[:-1]+1.5*wids,num,wids,ec='#377eb8',fc='#377eb8',zorder=10,label='Generated by GAN')

mean = np.mean(df2.iloc[:,0])  # 均值
std = np.std(df2.iloc[:,0])    # 标准差

x = np.linspace(mean - 4*std, mean + 4*std, 1000)
y = norm.pdf(x, mean, std)  # PDF (概率密度函数) 值
ax1.plot(x, y,color='#377eb8')



ax.set_ylim(0,250)
ax1.set_ylim(0,0.06)

ax1.set_yticks([])
ax.grid(axis='y',lw=0.8,color='lightgrey',ls='--')

ax.tick_params(direction='in')

ax.set_xlabel('Dip direction (°)')

ax.set_ylabel('Count')

ax.legend()

ax.set_xlim(xmin=0)
plt.savefig('fig1.jpg',dpi=600,bbox_inches='tight')

plt.show()